(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    347197,       6477]
NotebookOptionsPosition[    346447,       6452]
NotebookOutlinePosition[    346794,       6467]
CellTagsIndexPosition[    346751,       6464]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", "Parameters", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"k1", "=", " ", "0.1"}], ";", 
   RowBox[{"km1", " ", "=", " ", "0.1"}], ";"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"k2", " ", "=", " ", "0.3"}], ";", 
   RowBox[{"km2", " ", "=", " ", "0.5"}], ";"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"k3", " ", "=", " ", "0.1"}], ";"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"k4", " ", "=", " ", "1"}], ";", " ", 
  RowBox[{"km4", " ", "=", " ", "0.01"}], ";", " ", 
  RowBox[{"k4d", " ", "=", " ", "0.0"}], ";", " ", 
  RowBox[{"k4lk", " ", "=", " ", "0.00"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"k5", " ", "=", " ", 
   RowBox[{"0.5", "*", "k3"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"k6", " ", "=", " ", "10"}], ";", " ", 
  RowBox[{"k6s", " ", "=", " ", "0.9"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"k7", "=", " ", 
    RowBox[{"2", "*", "k6"}]}], ";"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"k8", "=", " ", "0.5"}], ";", " ", 
  RowBox[{"km8", " ", "=", " ", "0.5"}], ";", " ", 
  RowBox[{"k8lk", " ", "=", " ", "0.00"}], ";", " ", 
  RowBox[{"k8d", " ", "=", "k8"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"k9", " ", "=", "  ", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"k10", " ", "=", " ", "0.01"}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"k11", "=", " ", "0.02"}], " ", ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"k12", " ", "=", " ", "0.01"}], ";"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"System", " ", "Dynamics"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"sol", " ", "=", " ", 
    RowBox[{"NDSolve", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"stress", "[", "t", "]"}], " ", "\[Equal]", 
         RowBox[{"1", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"UnitStep", "[", 
             RowBox[{"t", "-", "20"}], "]"}], "-", 
            RowBox[{"UnitStep", "[", 
             RowBox[{"t", "-", "50"}], "]"}]}], ")"}]}]}], " ", ",", 
        "\[IndentingNewLine]", " ", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"atmActive", "'"}], "[", "t", "]"}], " ", "\[Equal]", "  ", 
         RowBox[{
          RowBox[{"k1", "*", 
           RowBox[{"stress", "[", "t", "]"}]}], "-", 
          RowBox[{"km1", "*", 
           RowBox[{"atmActive", "[", "t", "]"}]}]}]}], ",", " ", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", "J1", "*)"}], "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"chk1Active", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
         RowBox[{
          RowBox[{"k2", "*", 
           RowBox[{"atmActive", "[", "t", "]"}]}], "-", " ", 
          RowBox[{"km2", "*", 
           RowBox[{"chk1Active", "[", "t", "]"}]}]}]}], ",", " ", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", "J2", "*)"}], "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"p53", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
         RowBox[{"k3", "-", 
          RowBox[{"k5", "*", 
           RowBox[{"p53", "[", "t", "]"}]}], "-", 
          RowBox[{"k4", "*", 
           RowBox[{"(", 
            RowBox[{"k4lk", "+", 
             RowBox[{"chk1Active", "[", "t", "]"}]}], ")"}], "*", 
           RowBox[{"p53", "[", "t", "]"}]}], "+", 
          RowBox[{"km4", "*", 
           RowBox[{"p53Active", "[", "t", "]"}]}], "-", 
          RowBox[{"k9", "*", 
           RowBox[{"mdm2", "[", "t", "]"}], "*", 
           RowBox[{"p53", "[", "t", "]"}]}]}]}], ",", " ", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{"J3", "-", "J4", "-", "J5", "-", "J9"}], "*)"}], 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"p53Active", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
         RowBox[{
          RowBox[{"k4", "*", 
           RowBox[{"(", 
            RowBox[{"k4lk", "+", 
             RowBox[{"chk1Active", "[", "t", "]"}]}], ")"}], "*", 
           RowBox[{"p53", "[", "t", "]"}]}], "-", 
          RowBox[{"km4", "*", 
           RowBox[{"p53Active", "[", "t", "]"}]}], "-", 
          RowBox[{"k4d", "*", 
           RowBox[{"p53Active", "[", "t", "]"}]}]}]}], ",", " ", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{"J4", "-", "J4d"}], "*)"}], "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"mdm2", "'"}], "[", "t", "]"}], " ", "\[Equal]", "  ", 
         RowBox[{"k6s", "+", 
          RowBox[{"k6", "*", 
           RowBox[{"p53Active", "[", "t", "]"}]}], "-", 
          RowBox[{"k7", "*", 
           RowBox[{"mdm2", "[", "t", "]"}]}], "-", 
          RowBox[{"k8", "*", 
           RowBox[{"mdm2", "[", "t", "]"}], "*", 
           RowBox[{"(", 
            RowBox[{"k8lk", "+", 
             RowBox[{"atmActive", "[", "t", "]"}]}], ")"}]}], "+", 
          RowBox[{"km8", "*", 
           RowBox[{"mdm2Active", "[", "t", "]"}]}], "-", 
          RowBox[{"k9", "*", 
           RowBox[{"p53", "[", "t", "]"}], "*", 
           RowBox[{"mdm2", "[", "t", "]"}]}]}]}], ",", " ", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{"J6s", "+", "J6", "-", "J7", "-", "J8", "-", "J9"}], "*)"}], 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"mdm2Active", "'"}], "[", "t", "]"}], "\[Equal]", " ", 
         RowBox[{
          RowBox[{"k8", "*", 
           RowBox[{"mdm2", "[", "t", "]"}], "*", 
           RowBox[{"(", 
            RowBox[{"k8lk", "+", 
             RowBox[{"atmActive", "[", "t", "]"}]}], ")"}]}], "-", 
          RowBox[{"km8", "*", 
           RowBox[{"mdm2Active", "[", "t", "]"}]}], "-", 
          RowBox[{"k8d", "*", 
           RowBox[{"mdm2Active", "[", "t", "]"}]}]}]}], ",", " ", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{"J8", "-", "J8d"}], "*)"}], "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"c0", "'"}], "[", "t", "]"}], "\[Equal]", " ", 
         RowBox[{
          RowBox[{"k9", "*", 
           RowBox[{"p53", "[", "t", "]"}], "*", 
           RowBox[{"mdm2", "[", "t", "]"}]}], "-", 
          RowBox[{"k10", "*", 
           RowBox[{"c0", "[", "t", "]"}]}], "-", 
          RowBox[{"k11", "*", 
           RowBox[{"c0", "[", "t", "]"}]}]}]}], ",", " ", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{"J9", "-", "J10", "-", "J11"}], "*)"}], 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"c1", "'"}], "[", "t", "]"}], "\[Equal]", " ", 
         RowBox[{
          RowBox[{"k11", "*", 
           RowBox[{"c0", "[", "t", "]"}]}], "-", 
          RowBox[{"k12", "*", 
           RowBox[{"c1", "[", "t", "]"}]}]}]}], ",", " ", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{"J11", "-", "J12"}], "*)"}], "\[IndentingNewLine]", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"stress", "[", "0", "]"}], "\[Equal]", " ", 
             RowBox[{"atmActive", "[", "0", "]"}], "\[Equal]", 
             RowBox[{"chk1Active", "[", "0", "]"}], "\[Equal]", "  ", "0"}], 
            ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
              RowBox[{"stress", "'"}], "[", "0", "]"}], "\[Equal]", " ", 
             RowBox[{
              RowBox[{"atmActive", "'"}], "[", "0", "]"}], "\[Equal]", 
             RowBox[{
              RowBox[{"chk1Active", "'"}], "[", "0", "]"}], "\[Equal]", "  ", 
             "0"}], ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"c0", "[", "0", "]"}], "\[Equal]", " ", ".0976"}], ",", 
            " ", 
            RowBox[{
             RowBox[{"c1", "[", "0", "]"}], "\[Equal]", " ", "0.1952"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
              RowBox[{"c0", "'"}], "[", " ", "0", "]"}], "\[Equal]", " ", 
             "0"}], ",", " ", 
            RowBox[{
             RowBox[{
              RowBox[{"c1", "'"}], "[", " ", "0", "]"}], "\[Equal]", " ", 
             "0"}], ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"mdm2", "[", "0", "]"}], "\[Equal]", " ", "2.44375"}], 
            ",", 
            RowBox[{
             RowBox[{
              RowBox[{"mdm2", "'"}], "[", "0", "]"}], "\[Equal]", "0"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"p53", "[", "0", "]"}], "\[Equal]", " ", "0.0401003"}], 
            ",", 
            RowBox[{
             RowBox[{
              RowBox[{"p53", "'"}], "[", "0", "]"}], "\[Equal]", " ", "0"}], 
            ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"mdm2Active", "[", "0", "]"}], "\[Equal]", " ", "0.0"}], 
            ",", 
            RowBox[{
             RowBox[{
              RowBox[{"mdm2Active", "'"}], "[", "0", "]"}], "\[Equal]", " ", 
             "0.0"}], ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"p53Active", "[", "0", "]"}], "\[Equal]", " ", "0.0"}], 
            ",", 
            RowBox[{
             RowBox[{
              RowBox[{"p53Active", "'"}], "[", "0", "]"}], "\[Equal]", " ", 
             "0.0"}]}], "}"}], ","}], "*)"}], "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"stress", "[", "0", "]"}], "\[Equal]", " ", 
         RowBox[{"atmActive", "[", "0", "]"}], "\[Equal]", " ", 
         RowBox[{"chk1Active", "[", "0", "]"}], "\[Equal]", " ", 
         RowBox[{"c0", "[", "0", "]"}], "\[Equal]", " ", 
         RowBox[{"c1", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"mdm2", "[", "0", "]"}], "\[Equal]", " ", 
         RowBox[{"RandomInteger", "[", "]"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"p53Active", "[", "0", "]"}], "\[Equal]", " ", 
         RowBox[{"RandomInteger", "[", "]"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"mdm2Active", "[", "0", "]"}], "\[Equal]", " ", 
         RowBox[{"RandomInteger", "[", "]"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"p53", "[", "0", "]"}], "\[Equal]", " ", 
         RowBox[{"RandomInteger", "[", "]"}]}]}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
       "stress", ",", "atmActive", ",", "chk1Active", ",", "p53", ",", 
        "p53Active", ",", "mdm2", ",", " ", "mdm2Active", ",", " ", "c0", ",",
         " ", "c1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "1500"}], "}"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", "Plots", "*)"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"Evaluate", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"p53Active", "[", "t", "]"}], ",", 
        RowBox[{"mdm2", "[", "t", "]"}], ",", 
        RowBox[{"atmActive", "[", "t", "]"}], ",", 
        RowBox[{"stress", "[", "t", "]"}], ",", " ", 
        RowBox[{"chk1Active", "[", "t", "]"}]}], "}"}], "/.", "sol"}], "]"}], 
    ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", "0", ",", "150"}], "}"}], ",", 
    RowBox[{"PlotLegends", "\[Rule]", 
     RowBox[{"LineLegend", "[", 
      RowBox[{"{", 
       RowBox[{
       "\"\<p53 Active\>\"", ",", " ", "\"\<mdm2\>\"", ",", " ", 
        "\"\<atmActive\>\"", ",", " ", "\"\<stress\>\"", ",", " ", 
        "\"\<chk1Active\>\""}], "}"}], "]"}]}], ",", 
    RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"Evaluate", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"p53", "[", "t", "]"}], "+", 
         RowBox[{"p53Active", "[", "t", "]"}]}], ",", " ", 
        RowBox[{"p53", "[", "t", "]"}]}], "}"}], "/.", "sol"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", "0", ",", "150"}], "}"}], ",", 
    RowBox[{"PlotLegends", "\[Rule]", 
     RowBox[{"LineLegend", "[", 
      RowBox[{"{", 
       RowBox[{"\"\<Total p53 + p53 Active\>\"", ",", " ", "\"\<p53\>\""}], 
       "}"}], "]"}]}], ",", 
    RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"mdm2", "[", "t", "]"}], "+", 
        RowBox[{"mdm2Active", "[", "t", "]"}]}], ",", " ", 
       RowBox[{"mdm2", "[", "t", "]"}]}], "}"}], "/.", "sol"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "150"}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"LineLegend", "[", 
     RowBox[{"{", 
      RowBox[{"\"\<Total Mdm2 + Mdm2 Active\>\"", ",", " ", "\"\<Mdm2\>\""}], 
      "}"}], "]"}]}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{
     RowBox[{"{", " ", 
      RowBox[{"mdm2", "[", "t", "]"}], "}"}], "/.", "sol"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "150"}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"LineLegend", "[", 
     RowBox[{"{", " ", "\"\<Mdm2\>\"", "}"}], "]"}]}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"Evaluate", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"p53Active", "[", "t", "]"}], ",", 
        RowBox[{"mdm2Active", "[", "t", "]"}]}], "}"}], "/.", "sol"}], "]"}], 
    ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", "0", ",", "200"}], "}"}], ",", 
    RowBox[{"PlotLegends", "\[Rule]", 
     RowBox[{"LineLegend", "[", 
      RowBox[{"{", 
       RowBox[{"\"\<p53 Active\>\"", ",", "\"\<Mdm2 Active\>\""}], "}"}], 
      "]"}]}], ",", 
    RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"stress", "[", "t", "]"}], ",", 
       RowBox[{"p53", "[", "t", "]"}], ",", 
       RowBox[{"mdm2", "[", "t", "]"}]}], "}"}], "/.", "sol"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "250"}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"LineLegend", "[", 
     RowBox[{"{", 
      RowBox[{"\"\<stress\>\"", ",", "\"\<p53 \>\"", ",", "\"\<Mdm2 \>\""}], 
      "}"}], "]"}]}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"GridLines", "\[Rule]", "Automatic"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"Evaluate", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"p53", "[", "t", "]"}], ",", 
        RowBox[{"mdm2", "[", "t", "]"}]}], "}"}], "/.", "sol"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", "0", ",", "500"}], "}"}], ",", 
    RowBox[{"PlotLegends", "\[Rule]", 
     RowBox[{"LineLegend", "[", 
      RowBox[{"{", 
       RowBox[{"\"\<p53 \>\"", ",", "\"\<Mdm2\>\""}], "}"}], "]"}]}], ",", 
    RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"p53Active", "[", "t", "]"}], ",", 
       RowBox[{"mdm2", "[", "t", "]"}], ",", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"p53Active", "[", "t", "]"}], "+", 
         RowBox[{"mdm2", "[", "t", "]"}]}], ")"}]}], "}"}], "/.", "sol"}], 
    "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "500"}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"LineLegend", "[", 
     RowBox[{"{", 
      RowBox[{"\"\<p53acive \>\"", ",", "\"\<Mdm2\>\"", ",", "\"\<sum \>\""}],
       "}"}], "]"}]}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"Evaluate", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"stress", "[", "t", "]"}], ",", 
        RowBox[{"p53Active", "[", "t", "]"}], ",", 
        RowBox[{"p53", "[", "t", "]"}]}], "}"}], "/.", "sol"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", "0", ",", "500"}], "}"}], ",", 
    RowBox[{"PlotLegends", "\[Rule]", 
     RowBox[{"LineLegend", "[", 
      RowBox[{"{", 
       RowBox[{
       "\"\<stress\>\"", ",", 
        "\"\<\!\(\*SuperscriptBox[\(p53\), \(*\)]\) \>\"", ",", 
        "\"\<p53\>\""}], "}"}], "]"}]}], ",", 
    RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"stress", "[", "t", "]"}], ",", 
       RowBox[{"mdm2Active", "[", "t", "]"}], ",", 
       RowBox[{"mdm2", "[", "t", "]"}]}], "}"}], "/.", "sol"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "500"}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"LineLegend", "[", 
     RowBox[{"{", 
      RowBox[{
      "\"\<stress\>\"", ",", 
       "\"\<\!\(\*SuperscriptBox[\(Mdm2\), \(*\)]\) \>\"", ",", 
       "\"\<Mdm2\>\""}], "}"}], "]"}]}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], 
  "]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.6688131409208727`*^9, 3.668813256894803*^9}, {
   3.668813296368228*^9, 3.668813368224818*^9}, {3.6688134700305443`*^9, 
   3.668813476116123*^9}, {3.66881352339575*^9, 3.6688138452723083`*^9}, {
   3.6688138967695284`*^9, 3.6688139843090844`*^9}, {3.6688140235777073`*^9, 
   3.6688140289984703`*^9}, {3.668814252249728*^9, 3.6688143076705427`*^9}, 
   3.6688144650446253`*^9, {3.668815802882431*^9, 3.6688158039619217`*^9}, {
   3.6688159642087135`*^9, 3.6688159669294815`*^9}, 3.6688160349538736`*^9, {
   3.668816068568222*^9, 3.668816069933242*^9}, {3.6688161719512815`*^9, 
   3.6688161756884074`*^9}, 3.668816253770325*^9, {3.668847184191111*^9, 
   3.6688473179607353`*^9}, {3.668853236432205*^9, 3.6688532658579392`*^9}, {
   3.6688532980684175`*^9, 3.6688533251647024`*^9}, {3.668853362881286*^9, 
   3.6688534713633056`*^9}, {3.6688535127177896`*^9, 
   3.6688535255877533`*^9}, {3.6688535619025326`*^9, 3.668853586430361*^9}, {
   3.6688768447801867`*^9, 3.6688769685441694`*^9}, {3.668877005457126*^9, 
   3.668877060462146*^9}, {3.668877095757986*^9, 3.6688771062434473`*^9}, {
   3.6688771622817755`*^9, 3.6688772041979256`*^9}, 3.6689627742138166`*^9, {
   3.668962874378504*^9, 3.6689629277627277`*^9}, {3.6689634225892887`*^9, 
   3.6689634745247498`*^9}, {3.6689635054548054`*^9, 
   3.6689635579933043`*^9}, {3.6689636821689453`*^9, 
   3.6689636904266343`*^9}, {3.668963744694827*^9, 3.668963766373006*^9}, {
   3.6689638330141044`*^9, 3.6689638411259317`*^9}, {3.6689638987029247`*^9, 
   3.668963902939247*^9}, {3.6689640057859244`*^9, 3.66896400922163*^9}, {
   3.668964082423972*^9, 3.6689641147203636`*^9}, {3.6689642206029243`*^9, 
   3.668964266677593*^9}, {3.668964298228983*^9, 3.6689644769587216`*^9}, {
   3.6689645746695585`*^9, 3.6689645929265623`*^9}, {3.668964631738095*^9, 
   3.668964649422575*^9}, {3.6689647143070326`*^9, 3.668964767561698*^9}, {
   3.6689648014887576`*^9, 3.6689648098244104`*^9}, {3.6689648572812104`*^9, 
   3.668964861853748*^9}, {3.6689648984567084`*^9, 3.668964901757492*^9}, {
   3.668964964393361*^9, 3.668964972508562*^9}, {3.6689670831920505`*^9, 
   3.6689670892701893`*^9}, {3.668967336827261*^9, 3.6689673372152967`*^9}, 
   3.6689674591374197`*^9, {3.668967553613986*^9, 3.6689675582444906`*^9}, {
   3.6689675991602345`*^9, 3.668967599298018*^9}, {3.6689676707147913`*^9, 
   3.668967721157099*^9}, {3.6689677516703367`*^9, 3.66896778623837*^9}, 
   3.66896783772615*^9, {3.668967978651022*^9, 3.668968000222486*^9}, {
   3.6690374382598333`*^9, 3.6690374405788965`*^9}, {3.66903770109274*^9, 
   3.669037701767538*^9}, {3.6690377377683215`*^9, 3.6690377635655594`*^9}, {
   3.669038113685186*^9, 3.669038121983218*^9}, {3.6690382602449803`*^9, 
   3.6690382604144917`*^9}, {3.6690383134218683`*^9, 3.669038506917197*^9}, {
   3.669038562239915*^9, 3.669038566167894*^9}, {3.669038622902585*^9, 
   3.669038623586232*^9}, {3.669038852240531*^9, 3.669038913415887*^9}, {
   3.669039316423107*^9, 3.6690393339484*^9}, {3.669039364037918*^9, 
   3.6690394063885593`*^9}, 3.6691185508199863`*^9, {3.669118603461706*^9, 
   3.669118608050334*^9}, {3.6691212137181807`*^9, 3.6691213009166265`*^9}, {
   3.6691232032830324`*^9, 3.6691232291704903`*^9}, {3.6691232658534584`*^9, 
   3.669123273585452*^9}, {3.6691234271521826`*^9, 3.669123474459447*^9}, {
   3.6691236010700054`*^9, 3.6691236023874645`*^9}, {3.6691245243523245`*^9, 
   3.6691245430331717`*^9}, {3.669124609863702*^9, 3.66912463662204*^9}, {
   3.669125435237878*^9, 3.6691254842013035`*^9}, {3.66912560746714*^9, 
   3.6691257451628304`*^9}, {3.6695486936893473`*^9, 
   3.6695487666247835`*^9}, {3.6695488887156296`*^9, 
   3.6695489162310224`*^9}, {3.6695517310856705`*^9, 3.669551735104905*^9}, {
   3.669551811217843*^9, 3.6695518122037106`*^9}, {3.669670726645505*^9, 
   3.66967091307487*^9}, {3.6701673418463354`*^9, 3.6701673619153175`*^9}, {
   3.6701674194556*^9, 3.67016742893666*^9}, {3.6701674599041553`*^9, 
   3.6701675294176917`*^9}, {3.670167559463657*^9, 3.670167589650207*^9}, {
   3.670167635122772*^9, 3.670167747449458*^9}, {3.6701677862320786`*^9, 
   3.670167812811652*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.368417, 0.506779, 0.709798], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
7xGBa+SnCMgcNxlKtabjKsr6OxrTBPhcC1q724eO7TkBiWsJAnolDJTLjtNx
bKsHU2SeAPtwMc1VIXQ0D764cYL0Httr5mMxdIzychKs+EuAnFB7aMEVOq7c
uBH4F81DMl9uzkgxHQe2NLg3kl6YPvhQv5SON4RmBiIF5+Ere2iou4qOvjFZ
G8YXz0P+W2E3qXY6xlmceJcrNA/ija3hrl10dPtdeoQmPA8RT3Mu3vlKxx9x
e2LaSbuUKX4w49JRgvXJfkZkHtal7DaOEmTg1Q+ePZJi5PxxQofaRBj4etth
/iTSC/+2nFkvycCGsR3vF4mT8/s7P6mWY6CsodWhn6TpngqdwgoMvBxBodGX
z8MzN+6E3VYGXmHOPS8nfcU6ZPsklYEnahSFjkvMg4Q5mhnoM3DIcen7JtJn
DJceSTVkoJVTo/16yXlw1cy6uo3JQJUdpR+rSbduO1ATasvAdmf9lkVS84CK
m3peH2CgX9bpq8akN6y8L33Yk4GHvd721JNOFT+lVu7HwIhQPYtZ0nxLwZI/
iIEfaDLXt0vPg//fxV6MMAbWpofwDpD+/uddbF4kAzNPZmw6R5o5mlHEPcfA
W83nGHdJ1w061mmnMPAk40xgO2m1H/Jf4rIYuJp2MXuMdEH34MzHSwy8XjH6
WFRmHqTa765UKGTgo5d5vZtIRzYFaRy/ycCf7tUyWqTH6/WZdXcY2Brvvm8v
aVa14DHxRwycnb9bbEW6vfxt/IFqBmrIPBR1IG1Qmn791nMGhgeHJR0g/eCa
Q8P0KwbGJa3Y9p835m34vreZgQvVCTw70ulZA0TmBwamHeW2M0gLJN9Z1dfD
wCVvsc+Q9PHYk9SdPxjYXJcmr0m6L0LP5t8BBs4NfE7bQHpf8CL/90MM5J7d
QBMm3ejXlLhmklxfi6PsMLlfzaNpJZ6zDIyXPk9tIW2ttq3PiY+J4FmaXUr6
fGnKWOQiJl6oe6wXS7peeeJvyRImRlAKt/0X79lrtuJtwkws8trvtYO0uvyT
tdOiTHwi0DBDkOfllSensl6CiYFXe76+Il246qz2XmkmdjUlyKWQlpIysc1c
xcSvTfaVUqSvURR2xaxlYm3UoboOMl+oDnybg9YzkZEQW5JG2vFq1W87RSaq
uhQrC5LmNWR+MVFm4reYP41VZP5FDPi/0FZh4s7OaUsv0oU7tmSt2cnE4/X7
1BvJ/NW0XhwuqslEfYOPGT6kX578cWieykS3SuawJGnO01zNb3pM9LOMvmhD
1oO6uciHQhMmXnsyqlguSsbPt786w5yJMyecig1J26bXF0XTmZgTbU1tWzYP
od2hJzz2MVGj9+OFPrIe649wpba6MvGNRFL5L7KeraPfWd0PZuJE6soeN7L+
f964qV0YykTXF0Kd//WHoLfR8hnhTBzUfyOjSPqilP5YYBT5vSJ0+cI/D71X
y1JpKUz0YPeEbCf7zfGa5Jba6+R4wQtr+gwBgj+8Ku+VMJF56kV5LNnPsgWN
rxSUMvGZyu/Ip38IeGL+1zfqARNvNUkFbyD7n0CPn7jxMybWz/EvahonIGOK
adn8kYmnuDpC18l+e1Tu0aWFLiZ2D5dZFpL9eNeeVZwdn5nIf4H/+SU2eT+k
/YhN6SXzY6BgV+wAAXrbj9cxR5gY2qI0od1HQL97hkaHkBXORL1TXN9DgE7b
x1VdulYYeqBpy58XBCyf1j4qBFZo4tQUfKWR7Ofr8itoBlYoklbrYNRAQIqP
h02uiRWO8Mf+iq8jx5f+SXTcb4U9lz39p54QkLRLlu+LrxXuuzDAPkjeb99v
O/b/KLDCKn3hf89lk98P1RL/fM0KX0y8SRHMItdvIkP9dMMKO386dURkEJD3
831MU5kVPmq8MXcslQBHud2K5Y+tsCXtvZjWeQI6kpUORbdZ4dolFNmgcAJe
Bkz+2MxvjaZdIjYV5P19Wyv5i7erNS5aea2jTJmArreDYnbu1ugwdEWldTN5
Hq6Guww8rPHf7EgcUyDvx3PT+bI+1qjx1POGqjx533WzXF8EW6PAwNPsvFUE
+IZq9a1Lscaekp9uIELAzprvg2011qiIJ88Wc+ag0kBjUmuNDR4Kihi3vDkH
qeu6S7/8ssElEe7KD0XnYKD1ZsNM4T481HZ0o1zALAjvCwkb8duPqws8Ko8+
nwFf2+p9Stq26Ljq+Z8ZiRmwUlVK+Dhpi8/KXPpEvafhb1eGu3OdHW6vTZVw
rPwDKg5bLzpF2OOS10FOfJJ/INdeffQSzQGH4hRrhPynoENZd/CRgCN+tctr
dm78DQktx3btrXXEdr/rJb5Kv2G5cQH1XoITLudUxiudnQSJrIXEVLMDaKAQ
uOU+ewL2s94LlC92RqVku+Nf7SfgMF/e6rutzijemeY5VjsO44HZqfLJLvjC
JTliI2UcLJ+k3jzmdBDHMk+3/y4cg0BYGAmXckXVnDiPB/+MAb/YG50z/q6o
J1PXH507CpMGmbZ+n1yxzEOf74HMKGw+FFiQS3HDAiOwrqSNwMweMeJnuhse
cH5gGGYzDOrJ15Xkpt3wQYzG3bWsIbhVvy8y1ZaFDsXSIllxPHjwfCdS7Vlo
7Ml3ryOKB4/rxBf+58DCIAvPDqkzPHj97HWIkjMLZdROpKef4sGvJ3oBz9xZ
OHvz+UiOJw82lCu48vxZ6Lx3zeon5jzILprUN0lgoY4ds9FJggf5hW1zQ4ks
rCpJI0pEeVBccOdxRjIL31zxuTctxIOHV45SvqWxkOJQfj6Hnwdtlz5vC7rA
wrzub0v/N84F0czGNdeKWbivI+OfkI9ckMko6Da9wcLduzwEWtq4sCY9Imfk
JgtVd/QeUWzmwtZUmrRuKQvtci4WdrzkgkliqUj7AxbiEc+PFPJ/j5kQ/zr4
Ibm/9r6MlIdcsDvvEStXQb5fmfKOfY8LHuc2CHg+ZqHnIJReKeHCsbj5WvFq
Fr7audlmjvyfDIztCX/4lIWbRvgD7Qq5EBZTqev4jIVS6xvFH+ZzISo6c+Zv
LQu31zlvkrzEhf8DSELYpw==
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.880722, 0.611041, 0.142051], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1:eJwV13k8lN0XAHCphITo7a1EmzVtlhm7c2TfZoYQUmlEyFoiLZStRMiayFqp
LC1alBAhpby2FI1hbNlmLAlZf8/vr+fz/dyZ59577jnnfp4ddG9LZ24uLi6H
FVxc/38W2yz8YRd+0jZu4UmuWR6DmUStjxYxebDYKp2cpfkLlh6eOC0R8xoK
Y4vmp971wnvd+L+RjyuhNm55q51ND3AXny1bFfMRJAvivStrWKC70/pqsO9X
6HapoPjcYEGVUdrOy4+bgFsCjLb4ssCJKzpMPb0VPGxU/GjOLFhVcmlg5uZ3
mNkekDF2jAX3vT2NXgZ3QOzHhwpv7VlgIHPs8RnfTtAQW/7ufJgFft4yPLcV
umFdklW/lxUL9Oq3vfZ/zIKVFKPhLAsWbJDZ5Gq9qxd6yBacAQoL+kKENyun
94FgzJdgVTMWhKuvuDhx8xeIDYe6TxqwwCb5r3wjzxD8l9mcbKvHAunJCUZR
8DA80ba1q9ZhQe2jHm0PXzZ8zex/nq/JgjAB+tWzjydAR3H++EtFFtRc1NXn
3JyBfX/2wO1tLCh6VHH3qMks3NFb6tIXZ0Hyd43pLzx/4WP30oqZLSxwUVLO
yw+eg20L8a5OG1nAMyLJ5+a7CJpbzezp61gguTd0wPfxCozU2nD013w3OKef
fDx6cw36Jr8Xu9vRDe/FcmXWT63B6DlLW48f3bAljXWPZM+L7dvARautGxpS
j2UGSfPhqtac2r6mbiCn2CYKV/Bj+bIn3fBTN/DGmwUpj69DVjvN6lBJN7Tp
bpHTlhPBqrt2dpSUbghU414Mj9qEZ6Z66QWHu8Gk9vWHMo2dOJV+511ofReM
uF0I+yQqi3/Kv2yQmGICJ0HXOsd9H968cViybj3hksK1KbsVcVz7xP5FvU54
9ceizE1FEb8Wi9XE63RCsOK0l6aeIm5eZ1Avq90JwgXazayjitgbVyBro9IJ
Spn/3d5zSxGDfwhJv5LrhPPhE1JVM4q4vKtEPEqwE7gtSciuVsLFb40p138w
4HNM+0RFkxLea5eU2PONAQn1l3PjmUqoROUVbWxigKR+LY/qrBKe5T1otLme
AYaqh7+GyCuj6SlNRkIpA4TPzQdZqypj7lDVJd/XDPjxLPOArL4yNoaVm9sW
M8BdfjDh6zFlLMwbXDLLZ0C0RKD9pnhlPF8y3LuQxgCrI+ICIxnKyJKZ3Wh3
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
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.560181, 0.691569, 0.194885], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1:eJxF13c4lX/YAHAkWZEZyqjMFClb3Le9x+GYxzjnVFZF5EeIliR7Z5NSKqKM
NIxQkoaRRPbKLlIi9Hqv633r+eN5rs/1fb7jvv/53vcuqrflMToaGhqtjdf/
fstsVn/MFjdr0Pzfs5Ss3kSIvQ3/7/VCynGh2Ed/TVd2upo+tumv6avOji/F
dP31ZVXa4PmYL3/9Ilhbdy5m6a+PZR29OxOzBf/fgSp0a5ej+P7a6OWjhmq1
3X897REU1swl+ddzSdrW+Z4yf+363TjM5OI/91sSy36m//NbjmMcxs3/XBQX
/va7hOxfe0Q16+qO/bPvc4kdiyUH/lpm/t7B5qf/PCVywCin6Z+p55UDDQb+
mQCGXVlscn99oNozSffkP89VFbNc23vwryt/EKo9lP753MGfXod1/nlbkUb7
kNM/H8p9n7Yv4Z/PXJ4Xq1/6Z6xP6UqmP/TXTH9Urrpx/HPGmYszrNL/XH2c
q8zW+Z/pLBVwtvGfX8d2z9e2/XNSS8iNxP5/FtV9yaD8659nL3hWMW+Wx9Ss
HbbqQmSorGHz7OOQx3MP5rXXgs9C6O+HO0qF5DEkQqPVyS0C9JVt316UlsdH
ceda+jUTYNt/v0OtleVx+pOA8TXDVPj0IPeApK48RjxzLho0ygRP6Ymkt87y
SDxvFLQnOx+ihQId+BLlUUTH+mm+axEQSYKs0znyuDWPlCzfdh8E055XV9+T
xxrtpkzbrFK4z8G868gLeRxI7LBS+vMQ2ugzvxT/kke6/Yfanj98BLzTz/y0
XRTwSqCHnZ1HHXSAnUHPcQWc0snlD/5RB/HJ33f4nFFA+ejI/tnzz4FJY29D
ToIChqc0jL1MqYfV+GscKw0K6L6NrsP5USMMK/reL5VUxK4/nTNDPa+g5KLE
hOCCIg5yL6V7EVvhRFf90/J1RTQhRkqZxLeC5D7nOGMWJWzV+RbZ39IK+Z3J
ioGiSlhasPvwHq02SJWku/zBRglplLfGKUq3w9l3vbuinirhgagr+zu/doCB
QCLpV5gyVq8wTDvqdsEJ1m0plfHKWMDFs8D9XxckrMe888tSxu8Od7al3OyC
nuGrmvNlyvhthiZjju4TnLx3QWJqWBl1flQvbq3+BImHfb5/RhVUph6PUZDo
gV5ni6jaVRVks1E90vWhF2gI7xpDGFVxluXBTZb1XhDTNllX41ZFTaapXHaJ
PvCSMPCpklZFd76mm1fO9AHtN7B94KCK56W0GDT4+0H8guyeG1Wq+LVjkLhI
GADvG2xPw/3UUCrWrXitdRDy8otitS6oodPNxVW90UFov25EXY9RwxFf2rcB
S4MgnxfO5H9bDUN6Nx2PFxyClax122M9aijSh2t57kNwOXVuURsPY3uRyhf7
lSHIvPpOhpZVHbPsmqJ+so7Am4gTdNV86ki/oGztITgC61eYP54RU8djb9dU
mvaPADlcL+SbhjpavRyr1TEbAfFLNS0DPuoYaludaRg7Ag/O3nev6VLHoxeK
BROYR6HJOzY/+IYG7n1bzfxicRTIrOy9ziUa2OjUI9ZPOwYrhXE8Wk81MPvV
zqovbGOwbzg+grFDA380b4l+IzkG8cQkrxQ6wMxy4a/9pDFwUElTLaEASum3
WijWjkEALcFjnh0xz4B0VzJ4HBrNORhGeBBbNBsbfcPHYVtOW/6HHYhFymeC
SxLG4a6qZe8jCUQ9Pok1msJx6D1tZR4KiIJeQcwMH8YBx60VWLwRV5vD3xdI
fQHmFgdasXeIbwRO+t5s+QKEAt6SXx2IvrUHU2U6v0DauXbHN92Iw/Ty+cX9
X0BM3qjq9Bii3NW0W5HzXwCzVbzrVxH7Kr40P+edgP+8+fpcpDWR1JjhLesy
AYNcH6syIjSxTDlI3GliAsTnEly9YjXxEigdzvo2ASdfmXJrJW/8f83saduv
CVg5+8J7MlcTk39W7xZhmgSe8XJx5UeaaJ449dpYahKMqpKSO8c0cd5+9ccX
t0mocCSc2qathfYBx6RC+ifhorrgNNVQC4OLudqUxyfBQmjyWIW5FvbrcldN
zU7C1MB5koOjFu5f8vGTW5sEoSOlejf/00Lm7NlfxjumINyDXVC5UAu/354o
qrWeAlv/t80uW7WRo5CHsNAwBaK26ToPubSR1dstJvr1FCwoHaulF9DGlOAb
/wm1TUH08mr5HXFtLPlvt59U/xTUnd2X9x200cP+nFnf0hRIXoryv+KrjWHJ
ZMcXUtOwHGe4p6RLG+2FRB98vjINQbUMhJQ+bcy7NBIoFDMNK3MNocEj2viz
xIODlDgNq6YaPfpftXEXe0Tz86xpoGE9lDDIoIOFdYcl9B5MA2PEzj8cijrI
c8Ww40D3NPCd/9rjl6yD0SnyfdWiM5BeUsRIytDBnKnIFX2pGRAY8FDUzNPB
fcwfa9/sn4GdGqMJW4t00PCWN+ml4gyIrH4yuNWgg5JProQHGcyA5Jn6yq4F
HSTWvdg84zkDyqdSElUJupj4MYZZsGgG8BY1JtdWF8nh3C2k0hnQ75WNoHfW
xQ8tCrtSymfAxuB1yDtPXRS7r3t36dkMnBb5404N00W1cxpzZ9/OwP1Wd4h8
pIuqdSvbY2dnQFTu8Ey3oB4SiZdkfknNwj43pi8aonoY6uFISd0/C4eyPw7d
2KuHPEnXfsrKzYIWk0/XSSU93JpW4GKtPAsuQwX1tAQ99B30afXQm4WMBPZ0
qTA91D1HOVhDmQX2hWHdwCk9LA3eY6uWMgvbyu8R6r7p4Y2Mn6ZaabPA6e/n
tGVJD4dF5wN1M2eBe2Xzfymb9FGl2icMr8+CAJ3UzQc79fHHa4VJpuJZEOf0
ppsy00fXc/sZ5hpmQf3g7xqHMn0sZmIJFfg6CxqLDa+vP9bHhQje8dL5WcDK
6I8TtfrYa2KyTWdx4/yqQnP+b/Tx+XrAU/LyLBhoaQomjenj5vj0/tOb5oBo
eSW4ZbsBnirj6qLfPgfHfbmUD581wOJSRvoZtTkQufT2J+9FAxwOKRFdVZ+D
j0lXKuavGGDQe8VeJpwDrPh98HaSAfp+2rVDSGcOeH+N7Oe8Z4CcXpsl9prM
QQtjzsxMqQH2GJmYSpjNwXl+u3tNlQZo5jQpsttiDqZV30iG1Btg6YDe523E
OagLKd8z0W2AKcMlY+2kOfCP9RquH9gYv+X1vNppDqRzJa9njxlgef8Dl1su
czBYMuxyZtoAL/UJNERT5iC1LkvIat4A//wwmjt1ZA6M22z69i8ZIHPwyIjl
sTmgGd6WxbhmgJdrL9866DYHlQuvHUboDFHFbKok3WYj/k2X+WsYDZFbb1uK
5KGN+LnhUxqbIcpPpA8Nsm/EL7qceprbEMdPSR2rn9nIt95JbikRQ/ztuGxB
c3sWeK9asycrGaIRhe4yVXAW3qSzv/NSN8SATe8JLr9n4MLd5mhDbUPMSI3s
udQ9AzMt6sx/zAzxtLGdq3bqDDxnE9/s6WqICXOD5GscM3Ai+ecKpBgicI47
Hmefhvrca+PTC4YYxeY/liA+CeuVFF/dZUOUvBLtVcEwCarvpNdz/hiiVpgd
kfbLBDxYreWxZDVCDZEOD47CCcizn9CpEjNCA84g+a37JiCUS+VGmJ0R6mXo
9+irfQHVKz0ugjVGGG0/kRT03xj459yc9m80wmuEZSdjhzF4WOEV0PraCK2+
cqdpwBhIjdLFXeoyQpnWqeIopjHg05SumfxmhGHVHwuf5o7Cz5XgnZV7jHHp
eukb0/aN+85LsNvsqjESBl8LCZoPQ96HT9sPxxnj9z5/AX+VYYhXTbaRSjHG
tjyXBxN7huEUA8uHTdeNUXdpRklgeQhkcn69q6oyxjgPd/K9m0NQ9LajcfeE
MR6QTbc/QTMEt/ZFlv7UM8FDuZyh2kkDkJqo+3XExASbTmdLzZwcgMu/aGTa
LE3w2gm+9TqDATjaGHDvnrMJRo+4EebW+2GP47FbZH8TzC03WSac7Ie8KMx6
XWCCbz2berdZ9kHm1M8rOfSmaED7x5dH9TNw2tYnMbOYolbrFc9D2z9DRENM
rj+HKWqS5bhCF3vAL0v0kZmQKdIUiiWnlfSAiZnl+LqSKTppqwn1btRDqw+K
dVyOmyLt6JOqEyLd4Bh4lFak3RS51Vhs1Q90QfuY7NboT6Y4EiHXd4WzCwws
f/P96jfFy2VVp38tfgR56cQDrdOm2Hv21VbjJx+Bta/W5fxmM/R9MFVaqvcR
nuGOmkFlM8zNkTEjunaCIGN70PVcM5QIkW2uru2AWJr0a18LzJDt7nWW8Vsd
sP7LpVy9yAyfWVTH7I/tgP7J2dnuKjM0ZmKt4HfqgJwWJgpnuxkOklUJ1NV2
EIrT1L9Eb44KrEuWSdgOIrwPuI55mKM0zbNfvv2tEM925kCZtznaWHwrUW1u
BZotYErrb47brW/yCZa3wuDSm/Dsi+ZYeq/xjFxkK1zvnljuzDTHnuXUd8lK
rbA7W2RQ7505mmY8zLSUeQ+cnAY2yfwWeMGxXJHU9gZuKohqXN5pgWM0zkYR
JW9A0Z5G3F/YAqcbQzj6Yt6AQ17VD1sxC1Tn+LG+avQG8mWkUnbIWSBTa5cG
R1MLHDRm/pBvYIEDg+2/j7x8DZZhbwgPAiwwjaq999zgKxi9XaiSH2SBP814
HUwaXoF/S9iupBALPOfN2ap26xVkcKrP+12yQNn7LHPnT7yC4bzieOU4C8wr
vBObu9IEvtWx72tvWeDS1y4mVsEmSPppYfqu0wL9CWFh6YEvwF2wInP9kwVS
z6oM6Tm/AA0d/imZXgtsPuxPu137BUwkDIXHDVtgING/T2jrCzi837fO4qsF
rj0RVn2V3wjjR5IOdTASMJUjvpH0oQFU2zr5P6kRcNlke+9R83pg/6XizggE
7C1I38qvXA+jQjmVyloEVBF2H5kSqYe4E65W6QYEfFHANj6+8BxGtyxFO1gT
EI6EyxxOew4xGnw0fV4EfHSkrkBtog4G7zmMD10n4LfDN7fKqtQCe5ASW+9N
AlKbblvycteChgG34sfbBDTQbL8n9bUGskffXn5dTEAfeNvcUVADDoKaYmWP
CUh5UbEuy1MDHbESR8PaCMgqmpf2+fczeOmzOCROa4l6M2Xpt788gR/QxrSL
3hJFbzTYlzY9AVG2+3I7tlii7+sK7oHbT+DiXbcL7FstcXNr2Kti9ycAIz0i
v/gs8VxogQ7LzGOoIj53aT5gibTzzXO5y1VwTym27zjZEu8LuT3eIvsIPrVM
bLU9YolTNNTTDNyPgJ6sraHlaolVRxKviy5XgmPErxy+E5a4mOH5uqahEli7
qeQXAZZIT+52dHWoBK8gpRGhOEsUmn8ufiSmAuSqByfaqi2R+fgfjd1M5eBM
UOOvrrPEUe+eipb5MogcSzEsbLDEDpp+h/ieMhjeanw3tNkSiVtOPvAsKoNE
54rj0p0b66tnHyATymDxz9W5sBlLvB707PyhvIfwSOvQotIOK+SrIry6a/EA
xHt4oqhCVijssjfoteoDSPX5tStmlxXW92a83yz2APzyqs2HJayQxtW8691y
KRxc178XLW+FB9PzU27d3OhnHztSh0yt8IIRd2rOegncPBDeGnneCo/atFhr
xhUD9yt3t4pLVtiY4VY94VEMl1yM1wfCrfDDQrZVrU4xUGO37VOIscKLjLf4
l1eKQHgm48pAuhWeY54vTPMogozbJRryZVZY4/5Fz9r8HsQLdRf1jVkhR6eR
jYbaHXBwkhdsn7BCkcuJiSGCd2BPVlzMy2kr3Oy9eWDgTyFU8ut5lcxboXYm
H+3WF4XwmbtM9sKaFQY1FuzaTCgEcZaYh6I8RPwcyelk5H0bni1h1XEdIo6m
b5Ha3lgA4YpZkmR9ItKWhJ4/cbcAzP9bSiMaEdH1GoPwYHwBDC8UB6pbEHFm
+MH1Xc4FsGVOQI3dkYiOJ6xbmVZuguXoYvXD00Q0+nT+lbnSTfjSWtiwnE/E
0k7waX6ZD4uc0Rn7bxFR8qEMoeV+PtBYe/tQ7hBR7V5013RqPgh0Kwg3lxDR
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
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.922526, 0.385626, 0.209179], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1:eJxFznk4G3YcBvDI2NQ0znnaeuLRlsakh8YQZ/KIEIxHlCBuxUbmmHrWpo61
5piFNJK4SlloV49jWlFHVRztSmq07GlVNz3neJyl6hhi2/Po7/s+z/u8z+e/
92BEgncUFoPB5P7X/1fK2no/3yB3wOxmTWzfx+Rfp3ywoiacY8BvRcZKz3Qq
8/uQldtSJ9fyR5GzbJRSlvKnkH9LodEX8teQo8oja+fyP6F+MNcau53F24fs
dr/1bqftIeTZmPOZch0T5AURzbcq9jhy9Dv3zC8zwM+9faSrpeBBrSgtdzm4
/lL24DvCCeQYnpxOnwAn9RD0VxrNkI8v1ZHkHeAZQzO3ij5wxAUyl/ECzKS4
jpbjTiKbdcaK6HHghbaGT4tNScgt75mdMVbg70mr8XZOYM16h5FXwWDzyocl
RwvA57KWjHvXwNTewlGxsjnynh3r3K+0wJfPZcypE8GdHB2pXwg4u6Y10pQD
9pwI1Ns+C34ZcpVbVQDGeltQ5++BH/DHlrqGwaKBtGrhc3CQ6iHfqFmwEf3+
x+R18PzF2DY1lS92/ZbSIsPFjmuB0zeb9G8YgF3IfoMZRHAscVo0GALOM+Cy
9wnBw8plUw3rYL3ZO8m0UAvkxgzCNH7ZEplxQBi4nklGTqjGdWQn2yL3JfCr
UqodkNUG2ErGQ1TkW0HMRE2aI/LGJdfDjaM0ZHJiodCGSUfWWH5N5844I9uT
NmVsqQsyJ0mHbJfKgP/rb45p14G705oPT4+BiZUmkisT4KLucoNTS2D3Ydb4
sTUw5rVmueo2uGX5AfsN1nXXGAzno6z9MlWwoS7laQkO/MRoo+iMLpjqHKf7
uSFYL9dXQ2wF/r1UYyjeHnyxVp7nSgPPDdir7XiCe3BHVGKjwd+IV/+hFIJ7
K4snZ5fBipbwJPoG2GaIqKjYAd/c6vrMW90N+eeAaac2Y3C6jnV1pj/YJudZ
KF4GvhmPH/PMdUcum1nNqVD2QMarjpyXVHoia2szWOL9XsiiVS+Pocfgl3Xs
yVcSJnKdFX+cE+aN3OpovmKlfwpZYDBWPz4BnnpUc3ejygd5jw83dTHBFzme
1eFDsGYhM08QeI9XwDtPRaeDu/2QiQGmlwPT/ZFL/Ulvy8gByH+Y2E7fwrKR
eQ/jHJy7wBouEssbvEBkzUJFnsAtCNk3YhArVQlGjsJcOdD4CLycXCQ4yA9B
9rgtqIkLDEVOpigW07TDkJX2ym0uJIJXHMWshCfgI5HJklKLcOQNp71bfwvB
JP4vBPw6uLbXJ0PAikBu6jlJtfQHt3fjFH8GgPtl/VxCMHjitt23stNgQ6lR
2FwiuKh6xZ7BA1dUDW/O54GvSX5tF/HBzZVfW7woAA+X/XX0uxKwuvie/tVr
YF2RZMz1OlhfmF68WAM2FZB1bOvBjLx6tZEmsBcvt/9sM9jvp+hsfAs4+kdD
bEw7OC5nuwvXAU7OfpbWfAecmtVqy5aBf8gUb+x0gf8FFucMTg==
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.528488, 0.470624, 0.701351], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1:eJxFlnk0VX3Ux5EkmUMikjJEEyHz3mbXPFzzdC9ljpShiCeSBkNkypCpQhLK
EGXKkJQyRUi4IopMJbNe71rv+zznj3PWZ53f/u69v+f81m8fcPQ2OUNDRUUF
W7f/fZaary/+fNKqTPV/11KCUotxTB78P2/mkz34Y57/yzSlF2poY1r+ZdrK
y9+Woj/9y9fkqYPmoyf+5eYgNY2Z6KV/+Uz66YLp6B34/3xJjmbjWiT3v6zz
+nljjYLgvzzlFhjeulv0X56JVzPLcT/2H1c+2ZUsJvkvVywa17id+o//kfzj
paj+H7MWKndR7P7jk5ntd4/E/ccXr80LNSz9xzQm0viz6eS//Damf76u8z+O
fxd8/87Qf3xI4zWd7PJ//DPUvZJhuxRGFrVMRRv2KVfUMrt/YZPClujuowGj
7BCy9oy3hF8Ka8mzGd8TxUFL1uJ9mLgUlq1wbvL7KgCr31qImawUTpyT2XPh
jSb0Pc08Iaohhfyk0261f40ge0ZtdNVYCp8N+pXI51mAu/hk/Ht7KVwszbW5
aeIAkq5RGlkeUvgruyL+y7oTrD04sXT+ohQWViXArbeu0ET5mK9xTQq/b+a9
i2D2gij+S9bcd6SwfKO5KH7UB4g2fIxTGVLovOvKHc9FX+C7+6qm5rEUVih6
mLEqX4QiNoYDTs1SKBN5QmzV7R8IMCjqku6SwqBX9iGbD0IBI03C6YelcF/N
eGd24VXopE2beLIshdFfZNab/l6HVBVIubJdGv+xP/6yjXALHEO+6piyS6PE
kfEdEflR8HtJvGhZXBpLnOR68jtigWuq2lfNQRqHtIlN7KeSoBsstQc8pLHy
42Lzn4xkiE34xetzURp7eeLHXJlTYKeyWGNGnDQ2Sj6PnaZJh/XYZLbVRmnc
Lp4jV8OXDaMy54tKRGUw/K6JNtdgHhSHiUzyLcigFVWTzsPTpaDNc8dmOVwW
L1hpLoyXvwJPRtbEilhZnJ0R+/Jp/hXEbUZ/8E2XRecxsk/V0QYYGL2pMl8q
i6r6nxm0HjbA2cehIj9GZbGW5e/E2fhGuKPo8+szyiHdEM1Ddo9mGLQ3iqxb
l0PgZSs2o2kFKuMPTcH08hh7zvx6jHwrCKnpbSpwyOPOAA7bzPOt4CWi7VMp
Lo/9sR5eWqOtQD0HFk+t5dHqCd1Ebt1bEA49fvB+pTxKR9+ytznfBt73mV9G
+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
/HcwJw==
        "]]}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, 
     PlotRange -> {All, All}, PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"p53 Active\"", "\"mdm2\"", "\"atmActive\"", "\"stress\"", 
       "\"chk1Active\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.528488, 0.470624, 0.701351]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.6691232067045083`*^9, 3.669123230572033*^9}, 
   3.669123276440858*^9, {3.669123458447549*^9, 3.6691234783117437`*^9}, 
   3.6691236035105963`*^9, 3.6691237442060595`*^9, {3.669124525622327*^9, 
   3.669124544567976*^9}, {3.669124627694045*^9, 3.6691246375458593`*^9}, {
   3.6691254565041647`*^9, 3.669125486489894*^9}, {3.669125675021659*^9, 
   3.6691257475394087`*^9}, 3.6695434605937243`*^9, 3.6695486699883103`*^9, 
   3.6695487724835167`*^9, {3.669548895694578*^9, 3.669548917305962*^9}, 
   3.669551737792837*^9, 3.6695518152393436`*^9, 3.669670914961446*^9, 
   3.670167612312191*^9, 3.6701677028884134`*^9, {3.6701677350135155`*^9, 
   3.6701678288486834`*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.368417, 0.506779, 0.709798], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
jET/A24q94k=
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.880722, 0.611041, 0.142051], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
WPxHJyP579gHJ3MW/A9/jjYM
        "]]}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, 
     PlotRange -> {All, All}, PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"Total p53 + p53 Active\"", "\"p53\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.6691232067045083`*^9, 3.669123230572033*^9}, 
   3.669123276440858*^9, {3.669123458447549*^9, 3.6691234783117437`*^9}, 
   3.6691236035105963`*^9, 3.6691237442060595`*^9, {3.669124525622327*^9, 
   3.669124544567976*^9}, {3.669124627694045*^9, 3.6691246375458593`*^9}, {
   3.6691254565041647`*^9, 3.669125486489894*^9}, {3.669125675021659*^9, 
   3.6691257475394087`*^9}, 3.6695434605937243`*^9, 3.6695486699883103`*^9, 
   3.6695487724835167`*^9, {3.669548895694578*^9, 3.669548917305962*^9}, 
   3.669551737792837*^9, 3.6695518152393436`*^9, 3.669670914961446*^9, 
   3.670167612312191*^9, 3.6701677028884134`*^9, {3.6701677350135155`*^9, 
   3.670167828933297*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.368417, 0.506779, 0.709798], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.880722, 0.611041, 0.142051], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1:eJwV13k8lN0XAHCphITo7a1EmzVtlhm7c2TfZoYQUmlEyFoiLZStRMiayFqp
LC1alBAhpby2FI1hbNlmLAlZf8/vr+fz/dyZ59577jnnfp4ddG9LZ24uLi6H
FVxc/38W2yz8YRd+0jZu4UmuWR6DmUStjxYxebDYKp2cpfkLlh6eOC0R8xoK
Y4vmp971wnvd+L+RjyuhNm55q51ND3AXny1bFfMRJAvivStrWKC70/pqsO9X
6HapoPjcYEGVUdrOy4+bgFsCjLb4ssCJKzpMPb0VPGxU/GjOLFhVcmlg5uZ3
mNkekDF2jAX3vT2NXgZ3QOzHhwpv7VlgIHPs8RnfTtAQW/7ufJgFft4yPLcV
umFdklW/lxUL9Oq3vfZ/zIKVFKPhLAsWbJDZ5Gq9qxd6yBacAQoL+kKENyun
94FgzJdgVTMWhKuvuDhx8xeIDYe6TxqwwCb5r3wjzxD8l9mcbKvHAunJCUZR
8DA80ba1q9ZhQe2jHm0PXzZ8zex/nq/JgjAB+tWzjydAR3H++EtFFtRc1NXn
3JyBfX/2wO1tLCh6VHH3qMks3NFb6tIXZ0Hyd43pLzx/4WP30oqZLSxwUVLO
yw+eg20L8a5OG1nAMyLJ5+a7CJpbzezp61gguTd0wPfxCozU2nD013w3OKef
fDx6cw36Jr8Xu9vRDe/FcmXWT63B6DlLW48f3bAljXWPZM+L7dvARautGxpS
j2UGSfPhqtac2r6mbiCn2CYKV/Bj+bIn3fBTN/DGmwUpj69DVjvN6lBJN7Tp
bpHTlhPBqrt2dpSUbghU414Mj9qEZ6Z66QWHu8Gk9vWHMo2dOJV+511ofReM
uF0I+yQqi3/Kv2yQmGICJ0HXOsd9H968cViybj3hksK1KbsVcVz7xP5FvU54
9ceizE1FEb8Wi9XE63RCsOK0l6aeIm5eZ1Avq90JwgXazayjitgbVyBro9IJ
Spn/3d5zSxGDfwhJv5LrhPPhE1JVM4q4vKtEPEqwE7gtSciuVsLFb40p138w
4HNM+0RFkxLea5eU2PONAQn1l3PjmUqoROUVbWxigKR+LY/qrBKe5T1otLme
AYaqh7+GyCuj6SlNRkIpA4TPzQdZqypj7lDVJd/XDPjxLPOArL4yNoaVm9sW
M8BdfjDh6zFlLMwbXDLLZ0C0RKD9pnhlPF8y3LuQxgCrI+ICIxnKyJKZ3Wh3
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
        "]]}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0.4}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, 
     PlotRange -> {All, All}, PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"Total Mdm2 + Mdm2 Active\"", "\"Mdm2\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.6691232067045083`*^9, 3.669123230572033*^9}, 
   3.669123276440858*^9, {3.669123458447549*^9, 3.6691234783117437`*^9}, 
   3.6691236035105963`*^9, 3.6691237442060595`*^9, {3.669124525622327*^9, 
   3.669124544567976*^9}, {3.669124627694045*^9, 3.6691246375458593`*^9}, {
   3.6691254565041647`*^9, 3.669125486489894*^9}, {3.669125675021659*^9, 
   3.6691257475394087`*^9}, 3.6695434605937243`*^9, 3.6695486699883103`*^9, 
   3.6695487724835167`*^9, {3.669548895694578*^9, 3.669548917305962*^9}, 
   3.669551737792837*^9, 3.6695518152393436`*^9, 3.669670914961446*^9, 
   3.670167612312191*^9, 3.6701677028884134`*^9, {3.6701677350135155`*^9, 
   3.670167828995824*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.368417, 0.506779, 0.709798], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1:eJwV13k8lN0XAHCphITo7a1EmzVtlhm7c2TfZoYQUmlEyFoiLZStRMiayFqp
LC1alBAhpby2FI1hbNlmLAlZf8/vr+fz/dyZ59577jnnfp4ddG9LZ24uLi6H
FVxc/38W2yz8YRd+0jZu4UmuWR6DmUStjxYxebDYKp2cpfkLlh6eOC0R8xoK
Y4vmp971wnvd+L+RjyuhNm55q51ND3AXny1bFfMRJAvivStrWKC70/pqsO9X
6HapoPjcYEGVUdrOy4+bgFsCjLb4ssCJKzpMPb0VPGxU/GjOLFhVcmlg5uZ3
mNkekDF2jAX3vT2NXgZ3QOzHhwpv7VlgIHPs8RnfTtAQW/7ufJgFft4yPLcV
umFdklW/lxUL9Oq3vfZ/zIKVFKPhLAsWbJDZ5Gq9qxd6yBacAQoL+kKENyun
94FgzJdgVTMWhKuvuDhx8xeIDYe6TxqwwCb5r3wjzxD8l9mcbKvHAunJCUZR
8DA80ba1q9ZhQe2jHm0PXzZ8zex/nq/JgjAB+tWzjydAR3H++EtFFtRc1NXn
3JyBfX/2wO1tLCh6VHH3qMks3NFb6tIXZ0Hyd43pLzx/4WP30oqZLSxwUVLO
yw+eg20L8a5OG1nAMyLJ5+a7CJpbzezp61gguTd0wPfxCozU2nD013w3OKef
fDx6cw36Jr8Xu9vRDe/FcmXWT63B6DlLW48f3bAljXWPZM+L7dvARautGxpS
j2UGSfPhqtac2r6mbiCn2CYKV/Bj+bIn3fBTN/DGmwUpj69DVjvN6lBJN7Tp
bpHTlhPBqrt2dpSUbghU414Mj9qEZ6Z66QWHu8Gk9vWHMo2dOJV+511ofReM
uF0I+yQqi3/Kv2yQmGICJ0HXOsd9H968cViybj3hksK1KbsVcVz7xP5FvU54
9ceizE1FEb8Wi9XE63RCsOK0l6aeIm5eZ1Avq90JwgXazayjitgbVyBro9IJ
Spn/3d5zSxGDfwhJv5LrhPPhE1JVM4q4vKtEPEqwE7gtSciuVsLFb40p138w
4HNM+0RFkxLea5eU2PONAQn1l3PjmUqoROUVbWxigKR+LY/qrBKe5T1otLme
AYaqh7+GyCuj6SlNRkIpA4TPzQdZqypj7lDVJd/XDPjxLPOArL4yNoaVm9sW
M8BdfjDh6zFlLMwbXDLLZ0C0RKD9pnhlPF8y3LuQxgCrI+ICIxnKyJKZ3Wh3
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
        "]]}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0.42}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, 
     PlotRange -> {All, All}, PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"Mdm2\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                   None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0.368417, 0.506779, 0.709798], Editable -> False, 
                  Selectable -> False], ",", 
                 RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
             "}"}], ",", 
           RowBox[{"{", #, "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.6691232067045083`*^9, 3.669123230572033*^9}, 
   3.669123276440858*^9, {3.669123458447549*^9, 3.6691234783117437`*^9}, 
   3.6691236035105963`*^9, 3.6691237442060595`*^9, {3.669124525622327*^9, 
   3.669124544567976*^9}, {3.669124627694045*^9, 3.6691246375458593`*^9}, {
   3.6691254565041647`*^9, 3.669125486489894*^9}, {3.669125675021659*^9, 
   3.6691257475394087`*^9}, 3.6695434605937243`*^9, 3.6695486699883103`*^9, 
   3.6695487724835167`*^9, {3.669548895694578*^9, 3.669548917305962*^9}, 
   3.669551737792837*^9, 3.6695518152393436`*^9, 3.669670914961446*^9, 
   3.670167612312191*^9, 3.6701677028884134`*^9, {3.6701677350135155`*^9, 
   3.6701678290335627`*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.368417, 0.506779, 0.709798], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1:eJwV1Xk4VP8XB3BESYgsSZIQpU32/Zy02M2MhOxLzBSypMiWrxJtUkmiUBFR
qZQWSpT2okglacaWGftuzB1+9/fXPK9nnufc87nnc953lX+YU6CQgICAnqCA
wP9/Vc/yb+Qpf7WwBXnO3NwQWEUULwxllEP98dUD3JkhoLHWn13DqAEcl302
PjEELpeHaPMZDdCeIXe/v28I3CaouhP0vxBWoSnV82MIdt8QLOynD8FSYvDQ
bPkQuM/s9uylz4HvEtFF9b5D0Lr6uFEPfTEa94UnXH89CEVxgrPzvFRwQuVM
fET8AEhU5JcXU9agkq92godLP1zZQQhtltDG9uAnIVpb+kDcJzFHQVkbR1eo
7T5r1gfx0QI6Apu08UbOF/EJwz7wLBH2a6Bqo9U6v/d1G/tASUyiJjRTG9+d
fXuBrtQHVz6viCtdvhkfHUBqyxQHrjrDmJqWDqos35FoVc4BydDak4tMdVDy
C1e6vpQDiSlbVcfsdFCk6hVj600OeFda0epCddAvX97H8ioHlBWo5b73dXCZ
wspgm1McyPvtG3zVSBc/9053xtHJeuMdQik2uthzqeSySABZTzwwJ8RdF588
8JPK8Cbrme99bxqviw6JoVi8i6yXH6HZWqOLmf7uxe1byXr+yZ3yVnq4sSgz
Kl+FA9lTqXf+uOihnE9ZbZESBy6cPhNdGKSHI0wPz2oFDqRVZi/SOa6HuR+2
hqlLcyDZLu/79EU9zL8uXRQrwYEE5o38miI9TH2aV8hZyIFIsXJdh3o9NInW
ilOZx4GQ/Id8me96KGhj4sqZYwNd79nb1i49bN85vKCFYIP/+5pz18b10NM6
a3c3lw2e3vUeDGF9jIiKn6c4xQaXsQ+rN8nq46i/bcnBcTbQ0hqHJtT0cbdZ
YAt3hA07Hvw+enSrProtji/6b4ANaMVysN2pj/PePZ5L7WODaVvPUukAfYx7
YeRezWaDQUQ/60ekPgodus5c2csG7fmjZXnJ+hgVr/CgoocNWrlTBwPP66PO
xpTvMd1sWK3Nh/XX9ZHuZW4V3sUGlXohsbH7+lg85dSX08kGRXfR5qe1+lj0
aeUVbgcbZIck8pK+6mPVSZbSGdKLj8kwrFj6KHe2QcOFtNiyZTqSI/p4V2GL
9y7SwneViWYBA+zVDPA8RXrWUv1NrpQBfpznWjJNmvtjbYa/igH+/ZVdfZV8
3njIJve12gb4Tj9LOI7sZ1BQX30YDNDLpOBPBtlvb5bJYCXFACMvfM/+S56n
cx0+SfAxwN0XhWPo5HnbX25P3hZmgNcFrCvWcNjwc5ed/aIjBlhWUhGp1s+G
bxyq/Ld0Azy+/3yL6yAbPh9xYWbnGWDK8hVD9cNseCfrWepz1wB5P8frQ8fY
UHfLL0rjhQH+Z+yzizLJhmoLusXAZ7IeN+bcPnKej5tCRB/+McDuB2G+NeS8
b/Ojr2zhG6DUOkstOWEO3DyfECQqYYgOD3/Uy4ly4JrmUe0GJUNcJdpoSBHn
QBYt/bWnmSFquk8fC5bjQEbPhXQ1e0NMcHaqcVDkwKm4y24cD0MckNiYQV/J
gaSiwv7oOEP0lu8NRC0OxJqUVlqcMsTEas6F2U0cONhQniSSa4hiXu/KRvU5
sI/7TPbCM0Os9wkri7XkwJ70l+27Pxhi1SqtcxI2HPBRe1Oi0mqIik5jns0U
Djg7fDW7yzXEFSdGw3leHDC/9m/PeyMjbIrnuuTHc2D8Sh2tw8YIkxjv30Wk
cKA0+6oFz90IC2/Gn4lL54B8xk6FDQlG+NJ78+fN1zgwmFjzMaPWCEd80ruk
33OgwPOSjputMT6wdpftXNUHLm6RKyM8jLGXM2T3ZgOZV84O4idDjNF9Qiuo
ybgPYuzm9VSlG+Ojyp5JulMf0EzCLq9sMsayoujfASl9IKRgJfDPwwR1r81G
TY/0wRMZ1YG5EBNs2pxstVygH/Yv5v9SSDTBf0t9v3pI9sPv+RUVtgUmGGil
6qa7rh8eTijT73aZ4NjeFBWtoH4IbJr8fDDUFN1FPV+WM/vhXfrNXOEjZkjf
XxqQ0DUAr+c+PPp81gzZfvunx8YH4GX4UENWgRka//neGC0yCI+djITX1pmh
9zYLiZsag3BT/kOIg4g57vx7ETL3DsLRvAHzrFPmeGci+e3hkUGwuKvH1My2
wLkJB/muecPQGuR3vsgNMXF+7pdI1RHIX+qjWe5gifHF+qbHLMegNX/hUn7I
NuRpbCQEUycg4Kma62bGDtRef7LhT/oUXI0LweDd1viZeaiPFskFYad4419+
1tjcvm6LVSwX9q05rWO1zxpTFdxSTZK5YPS9TF0tzhqDVmCX4nkuNG3sE/19
xRq3Jh9orbvPhYUde7/aMq3xfpnNqfJhLhy0pvtr0W0wu+zmx+0hM9CmHO2R
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
74VPzc0x0C1w1dL3L5jwPxd8WFU=
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.880722, 0.611041, 0.142051], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
6HNHZRW+K5ubVED6hknaee7ofwCE4o9S
        "]]}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, 
     PlotRange -> {All, All}, PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"p53 Active\"", "\"Mdm2 Active\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.6691232067045083`*^9, 3.669123230572033*^9}, 
   3.669123276440858*^9, {3.669123458447549*^9, 3.6691234783117437`*^9}, 
   3.6691236035105963`*^9, 3.6691237442060595`*^9, {3.669124525622327*^9, 
   3.669124544567976*^9}, {3.669124627694045*^9, 3.6691246375458593`*^9}, {
   3.6691254565041647`*^9, 3.669125486489894*^9}, {3.669125675021659*^9, 
   3.6691257475394087`*^9}, 3.6695434605937243`*^9, 3.6695486699883103`*^9, 
   3.6695487724835167`*^9, {3.669548895694578*^9, 3.669548917305962*^9}, 
   3.669551737792837*^9, 3.6695518152393436`*^9, 3.669670914961446*^9, 
   3.670167612312191*^9, 3.6701677028884134`*^9, {3.6701677350135155`*^9, 
   3.6701678290960655`*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.368417, 0.506779, 0.709798], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1:eJxNz3swGwYcB3BvuTZeVRrsqFGr6JJ6lDGJUuKxUJ3qok1nDfEsjoU5hxvT
eFxNUGedjLi2mGk9qqxF2ZTiUNooZyhN523exonadtf+fvvefe97nz+/hpyo
z7lyMjIy2f/2v11YkzIZQUN0mXfpLyOYOJfed3hvMTHRT6e0HTzcempdvvQF
2O/modM7IglYVyllel20Dk6w/9V2VSR/+r0rh30kyyJNsGA0Zc+ZZwy+s7pD
lROiHxFiOK3t6DfWnKe2msfAn+Q75VLq0FOfyR8jrZiALVrSmAvhpmBXsTS5
Ih/NXuDVcpvQfB2u9uQBMng01mVS/DM6laLEezxjBn5Rkl6UG0ABa7NtHNKz
0CzSzOvEWvSEgEEO2UfPpyg+pBdRwbJ1jguxoSfBHwp0WlYS0c6Rq9+HC9B8
cqnFlUY08ZZMAlPRHEy60UowKkXbxRSO/lSPvuQdVUXqQhcTDbxVl9HG15IL
d+wtwIyAC6E8b3SwI+XT5QB05d74xJssNDWOZjIwgvY+r7XtsYiOsVjq7thH
1/8ljGgysQS/7OU5WNuh/65katR6ou2CpfVlPDTbRcw3zEAnGVWxhEXoYtk0
8pFqdNurS9Lc39GvWyz7iS/R8sKDovQ5tHGCJFpuD81gNZ1JUrd65xWHLlO1
lap6a7D7Lkc4xrIF52QaPt5l0MF0HbcpzjNHcF7bzlZ/pDNY5SxpY6PcBZwx
br2qO8UA6x7/gCnJcgVXxciW/2LlBt48whPnZKLpLdOyvAn0jEZBuvocWhB0
RuXuOtquaTXP/S1aoiYiTRPc4f/1QK/iVE209UOpkYE+OoPjR2VZos0blR9s
0NCjBxvsct3QJx4cYvRcRg8q97LtM9DeWUSOcR56gOgZTBT+zxr90WPV6H69
AX7iMLqXKq5pNvEAd34xpkDrQDeXL1bR5JjgtB/T1TujvMBnPVvWNDK9wZSM
xGc17efADd0zgY9IPuC7Vupp6cHnwXEXkwuelPiCZ/k/+F9duwAmR27rpVFY
YG22Qq7SNT9w9Nd9Ocyhi+Bil7Fv5dTYYJ5+Idko4DJYt66w877oSzA1yndR
ecQf/M1Nf67kxlfgVlZjX4LFFTBbj5vnOo6uiVnV20rjgCPKRcVswwBw8qs7
Sds96O2NPl9maCDYtES8lqLABVczzRcXq9DFwzUTah5B4Cku/+OQDXT2YHJs
fH4weGXQNzWMGgKuGEpdyB1Bdzc894yOCwXTi+KJfMMwcPjhvZzEbrRM+G2i
WVA4eP5J6Z+q6lfBNOlvjZX30K5dbV7HPSLAZYVaTn+soSOcsykMQSS436lC
SzEffdKxXdpegN6g7fQ4FqETbLjBtDJ0BpkmsmpG31Zf0jCaRSupEXam5tEh
KkaToiW02QG/e/rr6Dr5Dg/dt+jWLeF3GoejwEc3G8MGtNGp68/P5eigGSuE
oyoG6N45XjOBjKbM5tx6egItmK7M4lPRPpJJlsIpdP3UrkO7DVp7UvujVDt0
/IS5qiMNPTrG3Nx3QP8Dqy4KQw==
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.880722, 0.611041, 0.142051], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
wj8IxOSb15cEO1nwP8chy3c=
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.560181, 0.691569, 0.194885], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
        "]]}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {Automatic, Automatic}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, 
     PlotRange -> {All, All}, PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"stress\"", "\"p53 \"", "\"Mdm2 \""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.6691232067045083`*^9, 3.669123230572033*^9}, 
   3.669123276440858*^9, {3.669123458447549*^9, 3.6691234783117437`*^9}, 
   3.6691236035105963`*^9, 3.6691237442060595`*^9, {3.669124525622327*^9, 
   3.669124544567976*^9}, {3.669124627694045*^9, 3.6691246375458593`*^9}, {
   3.6691254565041647`*^9, 3.669125486489894*^9}, {3.669125675021659*^9, 
   3.6691257475394087`*^9}, 3.6695434605937243`*^9, 3.6695486699883103`*^9, 
   3.6695487724835167`*^9, {3.669548895694578*^9, 3.669548917305962*^9}, 
   3.669551737792837*^9, 3.6695518152393436`*^9, 3.669670914961446*^9, 
   3.670167612312191*^9, 3.6701677028884134`*^9, {3.6701677350135155`*^9, 
   3.670167829165122*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.368417, 0.506779, 0.709798], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
dwfXxA==
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.880722, 0.611041, 0.142051], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
kwb/B0x70i0=
        "]]}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, 
     PlotRange -> {All, All}, PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"p53 \"", "\"Mdm2\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.6691232067045083`*^9, 3.669123230572033*^9}, 
   3.669123276440858*^9, {3.669123458447549*^9, 3.6691234783117437`*^9}, 
   3.6691236035105963`*^9, 3.6691237442060595`*^9, {3.669124525622327*^9, 
   3.669124544567976*^9}, {3.669124627694045*^9, 3.6691246375458593`*^9}, {
   3.6691254565041647`*^9, 3.669125486489894*^9}, {3.669125675021659*^9, 
   3.6691257475394087`*^9}, 3.6695434605937243`*^9, 3.6695486699883103`*^9, 
   3.6695487724835167`*^9, {3.669548895694578*^9, 3.669548917305962*^9}, 
   3.669551737792837*^9, 3.6695518152393436`*^9, 3.669670914961446*^9, 
   3.670167612312191*^9, 3.6701677028884134`*^9, {3.6701677350135155`*^9, 
   3.6701678292306066`*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.368417, 0.506779, 0.709798], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.880722, 0.611041, 0.142051], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
kwb/B0x70i0=
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.560181, 0.691569, 0.194885], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
        "]]}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, 
     PlotRange -> {All, All}, PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"p53acive \"", "\"Mdm2\"", "\"sum \""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.6691232067045083`*^9, 3.669123230572033*^9}, 
   3.669123276440858*^9, {3.669123458447549*^9, 3.6691234783117437`*^9}, 
   3.6691236035105963`*^9, 3.6691237442060595`*^9, {3.669124525622327*^9, 
   3.669124544567976*^9}, {3.669124627694045*^9, 3.6691246375458593`*^9}, {
   3.6691254565041647`*^9, 3.669125486489894*^9}, {3.669125675021659*^9, 
   3.6691257475394087`*^9}, 3.6695434605937243`*^9, 3.6695486699883103`*^9, 
   3.6695487724835167`*^9, {3.669548895694578*^9, 3.669548917305962*^9}, 
   3.669551737792837*^9, 3.6695518152393436`*^9, 3.669670914961446*^9, 
   3.670167612312191*^9, 3.6701677028884134`*^9, {3.6701677350135155`*^9, 
   3.6701678292966146`*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.368417, 0.506779, 0.709798], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1:eJxF0HkwHAYUBvAdlB0VN2MZV9aoK+sIMlrr6iLORlJKIpVi3Wcc2SqKriuH
I6EqhN2pYIyKqmJcm46Nxh1EGURsVWKRYHftMOg1k7z3Zr755vffN08/NPEi
XYJAIOT/l/97S3Ds7Rax7kB4d5ONREMae8jxvZ/LZQaR2LPgeY6NUJK9Bg6q
VnY6ZAnBmtK5r4QsSaf3zrDvsdtjqYCVenTbDqiq4OazhacJS+g5k4APFdTU
wRYk0bJZsQb49b55TlSyNrhl/tLaDosM1qvq8JIXo78PUOo08zIA581NMqP3
0UGzHoZrHoZg4pRj9B8CI3B2Sd20yN0YLPI5sVN5gH453it7wd0E3DVq0zpS
YwqmD5vu9NMo4MX8m18sVaMvuPI5h2/R9tzGMttqc7AsT5G0kG4BfuLk5BPJ
RuewEnPFY2hxyCRfVd8SzFu51es3hq516Hu7uo8OqNs8naRnBR6/6nGrJA1d
OMDgaLPQLtrNwtZRdM+ydPCY7llwir1t2WVPNKWWzuWnovlHFQeMenTDFa4Z
cRQd0ie8ViVCa2qRKw11rd9513Eu4+LIrx7ossXcE1oq2mqA6b0VaweerS+s
KQ9zAGtUcIhktjPYLbDv0yxFGljGeZ1UGeoKfmqssNva6QY20jFY6rnqDi5S
thvmSp8H99we6vO8gt6Q9v352SN06sN2ioCLJtBUWlUW0bf/TDO22UFr5C40
Bkh54L90PzFgkNAWgw/Y1RS0x1Fo7XIgOm+fr1EZh+7fSar0yUFT/souGWxC
K0/cz2GJ0Yt1M+HhFZ7gOBeXM9tTXuDSYv3BIzdfsAPpPC90yg989/GheDLh
c3DRC9s9TV4AeFpmPNi+KAj3NW23UiWCwcz7hYrDiV+CP/MZECgVX8P9RZlT
7UNfgbtGXof3aoSBf7JWZBZGhoPTL2dXcuvp4I2CH0LiBBFgk4QDLSYlCqwe
LFUunR8NTk6ZKPWeiwHXuS7nSCjEgVN1qkzIYfFgzY6q4V9YCWDzRP9tmYVE
8I3qEPpaRRKYE9g9kWGVDA7Wot91f4Fuv76nJWZeB8c3seqC9VPA2S8fZh2M
og9EE/7e0alg4/rnglypNPAjb8vt7VZ03Xz7ioJnOphHLzgTJULfmc5OY9y7
Ad6d9s+LMWeAm+fytsoX0CNdMz7J6V+DHWoYcgX6GeBY1ZPSzBE0IbZBzjTi
G/Aml70ur5gJph7/1t3ShnZ/+tjXyDML3Fil5rIkQMfT7lDcyrLBky7Nah/c
Q1s4Dx0PVaJF1MNR5xp0xjl6JLURXWRCZVn3oxsU3yiRN9DSCsRD3iY66hR5
lfUGbSob1KYjRHdIPvHU/BvNEdd+p6T6LVhvvzvmmTo6TzjjV0pCu+0S9U7p
osf5qf1EEzRlo/TH383QZa9abhaYoy+trQZK2aA7eUeOQ+fQ6qvqH+V9jGas
WMo7U9GLy977/zii/wUU+PwO
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.880722, 0.611041, 0.142051], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.560181, 0.691569, 0.194885], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
dwfXxA==
        "]]}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, 
     PlotRange -> {All, All}, PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"stress\"", "\"\\!\\(\\*SuperscriptBox[\\(p53\\), \\(*\\)]\\) \"", 
       "\"p53\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.6691232067045083`*^9, 3.669123230572033*^9}, 
   3.669123276440858*^9, {3.669123458447549*^9, 3.6691234783117437`*^9}, 
   3.6691236035105963`*^9, 3.6691237442060595`*^9, {3.669124525622327*^9, 
   3.669124544567976*^9}, {3.669124627694045*^9, 3.6691246375458593`*^9}, {
   3.6691254565041647`*^9, 3.669125486489894*^9}, {3.669125675021659*^9, 
   3.6691257475394087`*^9}, 3.6695434605937243`*^9, 3.6695486699883103`*^9, 
   3.6695487724835167`*^9, {3.669548895694578*^9, 3.669548917305962*^9}, 
   3.669551737792837*^9, 3.6695518152393436`*^9, 3.669670914961446*^9, 
   3.670167612312191*^9, 3.6701677028884134`*^9, {3.6701677350135155`*^9, 
   3.6701678293656526`*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.368417, 0.506779, 0.709798], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1:eJxF0HkwHAYUBvAdlB0VN2MZV9aoK+sIMlrr6iLORlJKIpVi3Wcc2SqKriuH
I6EqhN2pYIyKqmJcm46Nxh1EGURsVWKRYHftMOg1k7z3Zr755vffN08/NPEi
XYJAIOT/l/97S3Ds7Rax7kB4d5ONREMae8jxvZ/LZQaR2LPgeY6NUJK9Bg6q
VnY6ZAnBmtK5r4QsSaf3zrDvsdtjqYCVenTbDqiq4OazhacJS+g5k4APFdTU
wRYk0bJZsQb49b55TlSyNrhl/tLaDosM1qvq8JIXo78PUOo08zIA581NMqP3
0UGzHoZrHoZg4pRj9B8CI3B2Sd20yN0YLPI5sVN5gH453it7wd0E3DVq0zpS
YwqmD5vu9NMo4MX8m18sVaMvuPI5h2/R9tzGMttqc7AsT5G0kG4BfuLk5BPJ
RuewEnPFY2hxyCRfVd8SzFu51es3hq516Hu7uo8OqNs8naRnBR6/6nGrJA1d
OMDgaLPQLtrNwtZRdM+ydPCY7llwir1t2WVPNKWWzuWnovlHFQeMenTDFa4Z
cRQd0ie8ViVCa2qRKw11rd9513Eu4+LIrx7ossXcE1oq2mqA6b0VaweerS+s
KQ9zAGtUcIhktjPYLbDv0yxFGljGeZ1UGeoKfmqssNva6QY20jFY6rnqDi5S
thvmSp8H99we6vO8gt6Q9v352SN06sN2ioCLJtBUWlUW0bf/TDO22UFr5C40
Bkh54L90PzFgkNAWgw/Y1RS0x1Fo7XIgOm+fr1EZh+7fSar0yUFT/souGWxC
K0/cz2GJ0Yt1M+HhFZ7gOBeXM9tTXuDSYv3BIzdfsAPpPC90yg989/GheDLh
c3DRC9s9TV4AeFpmPNi+KAj3NW23UiWCwcz7hYrDiV+CP/MZECgVX8P9RZlT
7UNfgbtGXof3aoSBf7JWZBZGhoPTL2dXcuvp4I2CH0LiBBFgk4QDLSYlCqwe
LFUunR8NTk6ZKPWeiwHXuS7nSCjEgVN1qkzIYfFgzY6q4V9YCWDzRP9tmYVE
8I3qEPpaRRKYE9g9kWGVDA7Wot91f4Fuv76nJWZeB8c3seqC9VPA2S8fZh2M
og9EE/7e0alg4/rnglypNPAjb8vt7VZ03Xz7ioJnOphHLzgTJULfmc5OY9y7
Ad6d9s+LMWeAm+fytsoX0CNdMz7J6V+DHWoYcgX6GeBY1ZPSzBE0IbZBzjTi
G/Aml70ur5gJph7/1t3ShnZ/+tjXyDML3Fil5rIkQMfT7lDcyrLBky7Nah/c
Q1s4Dx0PVaJF1MNR5xp0xjl6JLURXWRCZVn3oxsU3yiRN9DSCsRD3iY66hR5
lfUGbSob1KYjRHdIPvHU/BvNEdd+p6T6LVhvvzvmmTo6TzjjV0pCu+0S9U7p
osf5qf1EEzRlo/TH383QZa9abhaYoy+trQZK2aA7eUeOQ+fQ6qvqH+V9jGas
WMo7U9GLy977/zii/wUU+PwO
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.880722, 0.611041, 0.142051], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
71uLJYPaL8aRyNYwdOH4nyfeCWQw8MOKm3eEIZtvTGaDSWTg8bKqkzcJRUdK
ds0apJBB1zZ65E1uCPrjuT+2/jIZvmU1vdRYo6K3IoeFpK+SwUd2ysDAkYpu
f5atuXmNDEJS973SOygoJFfNYlfmln/SP2z2GFCQnr3ut/PXydBJlNp42kdG
+3gt4n/kkOHKm1DtVSIZLfQ4CXvlkWF/WehrNQEyenXFu67/JhkGDy4Hw3sS
SjciW+nfJsMxmTKRilwSUm1JSJS8RwZBjT+W99xJ6DOeV8/5kAw7jic9eEAl
oYo/92xiysjA/3a3yaMcEoqtrVhafkSGG49LgtlbSMg2lJbsUUkGorY6qpsg
oaPybWJ9T7bqxXVzM/sHCXU//GRXW0eGx1W5rP0rJBQqvpKS+4IMng82Ni+9
ISH9iU1xjoat+uG5u5/pAQntL2B5da6JDCy6yaqJF0ho0Wm34/cWMrAX2sWy
25BQA7/QqttrMjxLfC5+RZSEMvokrvS+2aonOz8Tpnki8rkmf0Sniwy5pJ0S
AZVExMGu73zkPRk6GMYKZ1SJaOy15c+cD2SoCZnBJn4Ho6r4U1fZBsiQ1qDi
rxgfjBzoqM2Lw2Sonw0tCC8NQlK0KBfXz1v1kKyq3q8VhOgik9Z7xrb03s/P
tzYUiIpW8qWqp8jA/F7qr+qvABTxqKT18NctPWy87ZoiApBRYJVr9hwZRJIa
onoX/NGBoy9+71wgw2mBV7x5Vv5oeep1xpklMgzXTjabFvuh5sLe4wvLZCjk
LZcVmvZF1wmfX7usbtXX6K1/Khy+yF9w1v3dTzJMNWMfegV8EDb0Y1NjgwwH
w5jthHd6o11Z/7Kq/pBBvfCslMmgJ5q03Ckn/o8MOWlKfntzPNBTrj0dWfQU
yDE4F5Ea6I6SOw947WCkQGtP7HCFtRtyTj5Kd5qJAv+eWaxus3JFMrqKOd9Y
KCCc9ePQDj8C2sYICqdYKcAzO1dwRc4F9b006HrLTgHFzqbS5BZnVHLW2ked
iwKu68lKHNec0BlVAkMlNwWsU63/id1wRKY//XLF9lCgs/Jkx+CYAxKpClHK
3EuBpDgrV2U/B7RKjO5mFqCA1uGn5/WUHVCb1EW/iP0UqK+L/LHXyAHlzGYw
zglRIMy1OvLRAwcUeK8g3+kgBaJRzOB+e0dkUr+fY5sYBUyy/P3LiE5I+t31
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
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.560181, 0.691569, 0.194885], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
kwb/B0x70i0=
        "]]}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, 
     PlotRange -> {All, All}, PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"stress\"", "\"\\!\\(\\*SuperscriptBox[\\(Mdm2\\), \\(*\\)]\\) \"", 
       "\"Mdm2\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.6691232067045083`*^9, 3.669123230572033*^9}, 
   3.669123276440858*^9, {3.669123458447549*^9, 3.6691234783117437`*^9}, 
   3.6691236035105963`*^9, 3.6691237442060595`*^9, {3.669124525622327*^9, 
   3.669124544567976*^9}, {3.669124627694045*^9, 3.6691246375458593`*^9}, {
   3.6691254565041647`*^9, 3.669125486489894*^9}, {3.669125675021659*^9, 
   3.6691257475394087`*^9}, 3.6695434605937243`*^9, 3.6695486699883103`*^9, 
   3.6695487724835167`*^9, {3.669548895694578*^9, 3.669548917305962*^9}, 
   3.669551737792837*^9, 3.6695518152393436`*^9, 3.669670914961446*^9, 
   3.670167612312191*^9, 3.6701677028884134`*^9, {3.6701677350135155`*^9, 
   3.670167829434663*^9}}]
}, Open  ]]
},
WindowSize->{1280, 637},
WindowMargins->{{88, Automatic}, {Automatic, 80}},
FrontEndVersion->"10.3 for Microsoft Windows (64-bit) (December 10, 2015)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 22323, 528, 1678, "Input"],
Cell[22906, 552, 60771, 1092, 238, "Output"],
Cell[83680, 1646, 27898, 506, 242, "Output"],
Cell[111581, 2154, 23266, 429, 238, "Output"],
Cell[134850, 2585, 14698, 272, 238, "Output"],
Cell[149551, 2859, 28896, 522, 238, "Output"],
Cell[178450, 3383, 29603, 549, 238, "Output"],
Cell[208056, 3934, 22133, 412, 238, "Output"],
Cell[230192, 4348, 30662, 566, 238, "Output"],
Cell[260857, 4916, 26891, 505, 238, "Output"],
Cell[287751, 5423, 58680, 1026, 238, "Output"]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
